- name: BORG | Install and configure BORG
  hosts: all
  become: true
  tasks:
  - name: update
    apt: 
      update_cache=yes

  - name: BORG | Install BORG
    apt:
      name: borgbackup
      state: latest

- name: Backup
  hosts: backup
  become: true
  tasks:
  - name: Create user borg
    ansible.builtin.user:
      name: borg
  - name: Change file ownership, group and permissions
    ansible.builtin.file:
      path: /var/backup
      owner: borg
      group: borg
      state: directory
      recurse: yes
  - name: Create a directory .ssh
    ansible.builtin.file:
      path: /home/borg/.ssh
      state: directory
      owner: borg
      group: borg
      mode: '0700'
  - name: Create a directory .ssh/authorized_keys
    ansible.builtin.file:
      path: /home/borg/.ssh/authorized_keys
      state: touch
      mode: '0600'
      owner: borg
      group: borg

- name: Client
  hosts: client
  become: yes  # Use become for privilege escalation if needed to manage users

  tasks:
    - name: Create or update user and generate SSH key
      ansible.builtin.user:
        name: root
        generate_ssh_key: yes
    - name: Read authorized_keys file
      ansible.builtin.slurp:
        src: /root/.ssh/id_rsa.pub # Adjust path and user as needed
      register: authorized_keys_content

    - name: Print the public key
      ansible.builtin.debug:
        msg: "{{ authorized_keys_content['content'] | b64decode }}"        


- name: Backup
  hosts: backup
  become: true
  tasks:
  - name: Set authorized key
    ansible.builtin.user:
      user: borg
      state: present
      key: "{{ authorized_keys_content['content'] | b64decode }}"

    # - name: Borg init
    #   ansible.builtin.shell: "borg init --encryption=repokey borg@192.168.56.160:/var/backup/"
    # notify:
    #   - restart nginx

  # - name: NGINX | Create NGINX config file from template
  #   template:
  #     src: templates/nginx.conf.j2
  #     dest: /etc/nginx/nginx.conf
  #   notify:
  #     - reload nginx
  #   tags:
  #     - nginx-configuration

  # handlers:
  #   - name: restart nginx
  #     systemd:
  #       name: nginx
  #       state: restarted
  #       enabled: yes
    
  #   - name: reload nginx
  #     systemd:
  #       name: nginx
  #       state: reloaded

