#SPDX-License-Identifier: MIT-0
---
# tasks file for install_barman
# Установка необходимых пакетов для работы с postgres и пользователями
  - name: install base tools
    apt:
      name:
        - python3-pexpect
        - python3-psycopg2
        - bash-completion 
        - wget 
      state: present
      update_cache: true

  #  Установка пакетов barman и postgresql-client на сервер barman 
  - name: install barman and postgresql packages on barman
    apt:
      name:
        - barman
        - barman-cli
        - postgresql
      state: present
      update_cache: true
    when: (ansible_hostname == barman_host)

 #  Установка пакетов barman-cli на серверах node1 и node2 
  - name: install barman-cli and postgresql packages on nodes
    apt:
      name:
        - barman-cli
      state: present
      update_cache: true
    when: (ansible_hostname != barman_host)

#  Генерируем SSH-ключ для пользователя postgres на хосте node1
  - name: generate SSH key for postgres
    user:
      name: postgres
      generate_ssh_key: yes
      ssh_key_type: rsa
      ssh_key_bits: 4096
      force: no
    when: (ansible_hostname == postgres_host)
 
#  Генерируем SSH-ключ для пользователя barman на хосте barman
  - name: generate SSH key for barman
    user:
      name: barman
      uid: 994
      shell: /bin/bash
      generate_ssh_key: yes
      ssh_key_type: rsa
      ssh_key_bits: 4096
      force: no
    when: (ansible_hostname == barman_host)

  #  Забираем содержимое открытого ключа postgres c хоста node1
  - name: fetch all public ssh keys node1
    shell: cat /var/lib/postgresql/.ssh/id_rsa.pub
    register: ssh_keys
    when: (ansible_hostname == postgres_host)

  #  Копируем ключ с barman на node1
  - name: transfer public key to barman
    delegate_to: barman
    authorized_key:
      key: "{{ ssh_keys.stdout }}"
      comment: "{{ansible_hostname}}"
      user: barman
    when: (ansible_hostname == postgres_host)

  #  Забираем содержимое открытого ключа barman c хоста barman 
  - name: fetch all public ssh keys barman
    shell: cat /var/lib/barman/.ssh/id_rsa.pub
    register: ssh_keys
    when: (ansible_hostname == barman_host)

 #  Копируем ключ с node1 на barman
  - name: transfer public key to barman
    delegate_to: node1
    authorized_key:
      key: "{{ ssh_keys.stdout }}"
      comment: "{{ansible_hostname}}"
      user: postgres
    when: (ansible_hostname == barman_host)

  #CREATE USER barman ;
  - name: Create barman user
    command: sudo -u postgres psql -c "CREATE USER {{ barman_user }} WITH SUPERUSER Encrypted PASSWORD '{{ barman_user_password }}';"
    ignore_errors: true
    when: (ansible_hostname == postgres_host)

   # Добавляем разрешения для подключения с хоста barman
  - name: Add permission for barman
    lineinfile:
      path: /etc/postgresql/14/main/pg_hba.conf
      line: "{{ item }}"
    loop:
      - 'host    all   {{ barman_user }}    {{ barman_ip }}/32    scram-sha-256'
      - 'host    replication   {{ barman_user }}    {{ barman_ip }}/32    scram-sha-256'
    when: (ansible_hostname == postgres_host) 

  # Перезагружаем службу postgresql-server
  - name: restart postgresql-server on node1
    service: 
      name: postgresql
      state: restarted
    when: (ansible_hostname == postgres_host)

  # Копируем файл .pgpass
  - name: copy .pgpass
    template:
      src: .pgpass.j2
      dest: /var/lib/barman/.pgpass
      owner: barman
      group: barman
      mode: '0600'
    when: (ansible_hostname == barman_host)

  # Копируем файл barman.conf
  - name: copy barman.conf
    template:
      src: barman.conf.j2
      dest: /etc/barman.conf 
      owner: barman
      group: barman
      mode: '0755'
    when: (ansible_hostname == barman_host)

 # Копируем файл node1.conf
  - name: copy node1.conf
    template:
      src: node1.conf.j2
      dest: /etc/barman.d/node1.conf
      owner: barman
      group: barman
      mode: '0755'
    when: (ansible_hostname == barman_host)

